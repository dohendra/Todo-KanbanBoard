{"version":3,"file":"static/js/752.535cc486.chunk.js","mappings":"kTAgBA,MAAMA,GAAeC,EAAAA,EAAAA,KAEfC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,SAAS,oBACZC,SAAUH,EAAAA,KACPE,SAAS,wBACZE,MAAOJ,EAAAA,KACJI,MAAM,uBACNF,SAAS,qBACZG,cAAeL,EAAAA,KACZM,QAAQ,WAAY,sCACpBC,WACHC,SAAUR,EAAAA,KACPE,SAAS,wBACZO,aAAcT,EAAAA,KACXO,aAGU,SAASG,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAqBC,GAA0BC,EAAAA,SAAe,OAC9DC,EAAcC,GAAmBF,EAAAA,UAAe,GAQjDG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbrB,KAAM,GACNE,SAAU,GACVC,MAAO,GACPC,cAAe,GACfG,SAAU,GACVC,aAAc,MAEhBV,iBAAkBA,EAClBwB,SAAUC,UACR,IAMI,MAAMC,OAAiB,IACpBC,EACHC,MAAO,IAEThB,GAASiB,EAAAA,EAAAA,IAASH,IAClBI,EAAAA,GAAMC,QAAQ,2BACdjB,EAAS,SACX,CAAE,MAAOkB,GACPC,QAAQD,MAAM,6BAA8BA,EAE9C,KAmBJ,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAACC,MAAOtC,EAAauC,UACnCC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAKC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAIP,SAAA,EAC7DH,EAAAA,EAAAA,KAACW,EAAAA,GAAW,KACZP,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CACFJ,GAAI,CACFK,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZb,SAAA,EAEFH,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACX,UAAU,KAAKY,QAAQ,KAAIf,SAAC,uBAGxCC,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACN,UAAU,OAAOhB,SAAUH,EAAOgC,aAAcX,GAAI,CAAEC,GAAI,GAAIN,SAAA,EACjEC,EAAAA,EAAAA,MAACgB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEnB,SAAA,EACzBH,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrB,UAChBH,EAAAA,EAAAA,KAACyB,EAAAA,EAAe,CACdzD,KAAK,OACL0D,MAAM,OACNvC,OAAQA,OAGZa,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrB,UAChBH,EAAAA,EAAAA,KAACyB,EAAAA,EAAe,CACdzD,KAAK,WACL0D,MAAM,WACNvC,OAAQA,OAGZa,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrB,UAChBH,EAAAA,EAAAA,KAACyB,EAAAA,EAAe,CACdzD,KAAK,QACL0D,MAAM,gBACNvC,OAAQA,OAGZa,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrB,UAChBH,EAAAA,EAAAA,KAACyB,EAAAA,EAAe,CACdzD,KAAK,gBACL0D,MAAM,iBACNvC,OAAQA,EACRwC,KAAK,WAGT3B,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrB,UAChBH,EAAAA,EAAAA,KAACyB,EAAAA,EAAe,CACdzD,KAAK,WACL0D,MAAM,WACNvC,OAAQA,EACRwC,KAAK,WACL1C,aAAcA,EACd2C,wBAzGkBA,IAAM1C,GAAiBD,GA0GzC4C,wBAxGmBC,IAC/BA,EAAMC,gBAAgB,OA0Gd3B,EAAAA,EAAAA,MAACgB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGrB,SAAA,EAChBC,EAAAA,EAAAA,MAAC4B,EAAAA,EAAM,CACLd,QAAQ,YACRZ,UAAU,QACV2B,WAAS,EACTzB,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAIP,SAAA,CACtB,wBAECH,EAAAA,EAAAA,KAAA,SACE2B,KAAK,OACLO,OAAO,UACPC,QAAM,EACNC,SApFkBN,IAChC,MAAMO,EAAOP,EAAMQ,OAAOC,MAAM,GAChC,GAAIF,EAAM,CACRlD,EAAOqD,cAAc,eAAgBH,GACrC,MAAMI,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACjB5D,EAAuB0D,EAAOG,OAAO,EAEvCH,EAAOI,cAAcR,EACvB,MACElD,EAAOqD,cAAc,eAAgB,MACrCzD,EAAuB,KACzB,OA2EWD,IACCkB,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CACFN,UAAU,MACVwC,IAAKhE,EACLiE,IAAI,kBACJvC,GAAI,CACFwC,MAAO,OACPC,OAAQ,OACRxC,GAAI,EACJyC,aAAc,gBAMxBlD,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLL,KAAK,SACLM,WAAS,EACTf,QAAQ,YACRV,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAIP,SACtB,aAGDH,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACC,WAAS,EAAC8B,eAAe,SAAQhD,UACrCH,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACG,MAAI,EAAApB,UACRH,EAAAA,EAAAA,KAACoD,EAAAA,GAAI,CAACC,GAAG,SAAQlD,SAAC,mDAUhC,C,yGChMA,MAuCA,EAvCwBmD,IAQjB,IARkB,KACvBtF,EAAI,MACJ0D,EAAK,OACLvC,EAAM,KACNwC,EAAO,OAAM,aACb1C,GAAe,EAAK,wBACpB2C,EAAuB,wBACvBC,GACDyB,EACC,OACEtD,EAAAA,EAAAA,KAACuD,EAAAA,EAAS,CACRtB,WAAS,EACTuB,GAAIxF,EACJA,KAAMA,EACN0D,MAAOA,EACPC,KAAe,aAATA,GAAuB1C,EAAe,OAAS0C,KACjDxC,EAAOsE,cAAczF,GACzB8B,MAAOX,EAAOuE,QAAQ1F,IAAS2F,QAAQxE,EAAOyE,OAAO5F,IACrD6F,WAAY1E,EAAOuE,QAAQ1F,IAASmB,EAAOyE,OAAO5F,GAClD8F,WAAY,IACG,aAATnC,GAAuB,CACzBoC,cACE/D,EAAAA,EAAAA,KAACgE,EAAAA,EAAc,CAACC,SAAS,MAAK9D,UAC5BH,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACT,aAAW,6BACXC,QAASvC,EACTwC,YAAavC,EACbwC,KAAK,MAAKlE,SAETlB,GAAee,EAAAA,EAAAA,KAACsE,EAAAA,EAAa,KAAMtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,WAMzD,C","sources":["Pages/RegistrationForm/RegistrationForm.jsx","components/CustomTextField/CustomTextField.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CustomTextField from '../../components/CustomTextField/CustomTextField';\r\nimport { registerUser } from '../../apiConfig';\r\nimport { register } from '../../redux/features/registerSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nconst defaultTheme = createTheme();\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string()\r\n    .required('Name is required'),\r\n  username: Yup.string()\r\n    .required('Username is required'),\r\n  email: Yup.string()\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  contactNumber: Yup.string()\r\n    .matches(/^[0-9]+$/, 'Contact number must be digits only')\r\n    .nullable(),\r\n  password: Yup.string()\r\n    .required('Password is required'),\r\n  profileImage: Yup.mixed()\r\n    .nullable()\r\n});\r\n\r\nexport default function RegistrationForm() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [profileImagePreview, setProfileImagePreview] = React.useState(null);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      username: '',\r\n      email: '',\r\n      contactNumber: '',\r\n      password: '',\r\n      profileImage: null\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async(values) => {\r\n      try {\r\n        // const userData = await registerUser({\r\n        //   ...values,\r\n        //   tasks: [],\r\n        // });\r\n// bypassing json-server api call\r\n          const userData = await {\r\n          ...values,\r\n          tasks: [],\r\n        };\r\n        dispatch(register(userData));\r\n        toast.success('Registered successfully');\r\n        navigate('/login');\r\n      } catch (error) {\r\n        console.error(\"Error during registration:\", error);\r\n        \r\n      }\r\n    },\r\n  });\r\n\r\n  const handleProfileImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      formik.setFieldValue('profileImage', file);\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProfileImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      formik.setFieldValue('profileImage', null);\r\n      setProfileImagePreview(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n    <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 3, mb: 2 }}>\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registration Form\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                formik={formik}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                formik={formik}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                name=\"email\"\r\n                label=\"Email Address\"\r\n                formik={formik}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                name=\"contactNumber\"\r\n                label=\"Contact Number\"\r\n                formik={formik}\r\n                type=\"tel\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CustomTextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                formik={formik}\r\n                type=\"password\"\r\n                showPassword={showPassword}\r\n                handleClickShowPassword={handleClickShowPassword}\r\n                handleMouseDownPassword={handleMouseDownPassword}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                fullWidth\r\n                sx={{ mt: 2, mb: 2 }}\r\n              >\r\n                Upload Profile Image\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  hidden\r\n                  onChange={handleProfileImageChange}\r\n                />\r\n              </Button>\r\n              {profileImagePreview && (\r\n                <Box\r\n                  component=\"img\"\r\n                  src={profileImagePreview}\r\n                  alt=\"Profile Preview\"\r\n                  sx={{\r\n                    width: '100%',\r\n                    height: 'auto',\r\n                    mt: 2,\r\n                    borderRadius: '8px',\r\n                  }}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"center\">\r\n            <Grid item>\r\n              <Link to=\"/login\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  </ThemeProvider>\r\n  );\r\n}\r\n","// CustomTextField.jsx\r\nimport React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nconst CustomTextField = ({\r\n  name,\r\n  label,\r\n  formik,\r\n  type = 'text',\r\n  showPassword = false,\r\n  handleClickShowPassword,\r\n  handleMouseDownPassword,\r\n}) => {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      id={name}\r\n      name={name}\r\n      label={label}\r\n      type={type === 'password' && showPassword ? 'text' : type}\r\n      {...formik.getFieldProps(name)}\r\n      error={formik.touched[name] && Boolean(formik.errors[name])}\r\n      helperText={formik.touched[name] && formik.errors[name]}\r\n      InputProps={{\r\n        ...(type === 'password' && {\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTextField;\r\n"],"names":["defaultTheme","createTheme","validationSchema","Yup","name","required","username","email","contactNumber","matches","nullable","password","profileImage","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","profileImagePreview","setProfileImagePreview","React","showPassword","setShowPassword","formik","useFormik","initialValues","onSubmit","async","userData","values","tasks","register","toast","success","error","console","_jsx","ThemeProvider","theme","children","_jsxs","Container","component","maxWidth","sx","mt","mb","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Typography","variant","handleSubmit","Grid","container","spacing","item","xs","CustomTextField","label","type","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Button","fullWidth","accept","hidden","onChange","file","target","files","setFieldValue","reader","FileReader","onloadend","result","readAsDataURL","src","alt","width","height","borderRadius","justifyContent","Link","to","_ref","TextField","id","getFieldProps","touched","Boolean","errors","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility"],"sourceRoot":""}
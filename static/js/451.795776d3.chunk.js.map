{"version":3,"file":"static/js/451.795776d3.chunk.js","mappings":"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","sources":["apiConfig/index.js","../node_modules/@react-oauth/google/dist/index.esm.js","../node_modules/jwt-decode/build/esm/index.js","Pages/LoginForm/LoginFormGoogle.jsx","components/CustomTextField/CustomTextField.jsx"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\r\n\r\nconst handleResponse = async (response) => {\r\n  const json = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(json.message || 'Something went wrong');\r\n  }\r\n  return json;\r\n};\r\n\r\n// register user\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to register user');\r\n    }\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Error registering user:', error);\r\n    throw error;\r\n  }\r\n};\r\n// Fetch all users\r\nexport const fetchUsers = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users`);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Error fetching users:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch user by username and password\r\nexport const loginApi = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users?username=${username}&password=${password}`);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Error fetching user by username and password:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add a new user\r\nexport const addUser = async (user) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Error adding user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update a user\r\nexport const updateUser = async (id, user) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Error updating user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a user\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/users/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    if (!response.ok) {\r\n      const json = await response.json();\r\n      throw new Error(json.message || 'Something went wrong');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error deleting user:', error);\r\n    throw error;\r\n  }\r\n};\r\n","'use client'\nimport React, { useState, useRef, useEffect, createContext, useMemo, useContext, useCallback } from 'react';\n\nfunction useLoadGsiScript(options = {}) {\r\n    const { nonce, onScriptLoadSuccess, onScriptLoadError } = options;\r\n    const [scriptLoadedSuccessfully, setScriptLoadedSuccessfully] = useState(false);\r\n    const onScriptLoadSuccessRef = useRef(onScriptLoadSuccess);\r\n    onScriptLoadSuccessRef.current = onScriptLoadSuccess;\r\n    const onScriptLoadErrorRef = useRef(onScriptLoadError);\r\n    onScriptLoadErrorRef.current = onScriptLoadError;\r\n    useEffect(() => {\r\n        const scriptTag = document.createElement('script');\r\n        scriptTag.src = 'https://accounts.google.com/gsi/client';\r\n        scriptTag.async = true;\r\n        scriptTag.defer = true;\r\n        scriptTag.nonce = nonce;\r\n        scriptTag.onload = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(true);\r\n            (_a = onScriptLoadSuccessRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadSuccessRef);\r\n        };\r\n        scriptTag.onerror = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(false);\r\n            (_a = onScriptLoadErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadErrorRef);\r\n        };\r\n        document.body.appendChild(scriptTag);\r\n        return () => {\r\n            document.body.removeChild(scriptTag);\r\n        };\r\n    }, [nonce]);\r\n    return scriptLoadedSuccessfully;\r\n}\n\nconst GoogleOAuthContext = createContext(null);\r\nfunction GoogleOAuthProvider({ clientId, nonce, onScriptLoadSuccess, onScriptLoadError, children, }) {\r\n    const scriptLoadedSuccessfully = useLoadGsiScript({\r\n        nonce,\r\n        onScriptLoadSuccess,\r\n        onScriptLoadError,\r\n    });\r\n    const contextValue = useMemo(() => ({\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n    }), [clientId, scriptLoadedSuccessfully]);\r\n    return (React.createElement(GoogleOAuthContext.Provider, { value: contextValue }, children));\r\n}\r\nfunction useGoogleOAuth() {\r\n    const context = useContext(GoogleOAuthContext);\r\n    if (!context) {\r\n        throw new Error('Google OAuth components must be used within GoogleOAuthProvider');\r\n    }\r\n    return context;\r\n}\n\nfunction extractClientId(credentialResponse) {\r\n    var _a;\r\n    const clientId = (_a = credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.clientId) !== null && _a !== void 0 ? _a : credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.client_id;\r\n    return clientId;\r\n}\n\nconst containerHeightMap = { large: 40, medium: 32, small: 20 };\r\nfunction GoogleLogin({ onSuccess, onError, useOneTap, promptMomentNotification, type = 'standard', theme = 'outline', size = 'large', text, shape, logo_alignment, width, locale, click_listener, containerProps, ...props }) {\r\n    const btnContainerRef = useRef(null);\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                const { credential, select_by } = credentialResponse;\r\n                onSuccessRef.current({\r\n                    credential,\r\n                    clientId: extractClientId(credentialResponse),\r\n                    select_by,\r\n                });\r\n            },\r\n            ...props,\r\n        });\r\n        (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.renderButton(btnContainerRef.current, {\r\n            type,\r\n            theme,\r\n            size,\r\n            text,\r\n            shape,\r\n            logo_alignment,\r\n            width,\r\n            locale,\r\n            click_listener,\r\n        });\r\n        if (useOneTap)\r\n            (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a, _b, _c;\r\n            if (useOneTap)\r\n                (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        useOneTap,\r\n        type,\r\n        theme,\r\n        size,\r\n        text,\r\n        shape,\r\n        logo_alignment,\r\n        width,\r\n        locale,\r\n    ]);\r\n    return (React.createElement(\"div\", { ...containerProps, ref: btnContainerRef, style: { height: containerHeightMap[size], ...containerProps === null || containerProps === void 0 ? void 0 : containerProps.style } }));\r\n}\n\nfunction googleLogout() {\r\n    var _a, _b, _c;\r\n    (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.disableAutoSelect();\r\n}\n\n/* eslint-disable import/export */\r\nfunction useGoogleLogin({ flow = 'implicit', scope = '', onSuccess, onError, onNonOAuthError, overrideScope, state, ...props }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const clientRef = useRef();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const onNonOAuthErrorRef = useRef(onNonOAuthError);\r\n    onNonOAuthErrorRef.current = onNonOAuthError;\r\n    useEffect(() => {\r\n        var _a, _b;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        const clientMethod = flow === 'implicit' ? 'initTokenClient' : 'initCodeClient';\r\n        const client = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2[clientMethod]({\r\n            client_id: clientId,\r\n            scope: overrideScope ? scope : `openid profile email ${scope}`,\r\n            callback: (response) => {\r\n                var _a, _b;\r\n                if (response.error)\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef, response);\r\n                (_b = onSuccessRef.current) === null || _b === void 0 ? void 0 : _b.call(onSuccessRef, response);\r\n            },\r\n            error_callback: (nonOAuthError) => {\r\n                var _a;\r\n                (_a = onNonOAuthErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onNonOAuthErrorRef, nonOAuthError);\r\n            },\r\n            state,\r\n            ...props,\r\n        });\r\n        clientRef.current = client;\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [clientId, scriptLoadedSuccessfully, flow, scope, state]);\r\n    const loginImplicitFlow = useCallback((overrideConfig) => { var _a; return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestAccessToken(overrideConfig); }, []);\r\n    const loginAuthCodeFlow = useCallback(() => { var _a; return (_a = clientRef.current) === null || _a === void 0 ? void 0 : _a.requestCode(); }, []);\r\n    return flow === 'implicit' ? loginImplicitFlow : loginAuthCodeFlow;\r\n}\n\nfunction useGoogleOneTapLogin({ onSuccess, onError, promptMomentNotification, cancel_on_tap_outside, prompt_parent_id, state_cookie_domain, hosted_domain, use_fedcm_for_prompt = false, disabled, auto_select, }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        if (disabled) {\r\n            (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n            return;\r\n        }\r\n        (_f = (_e = (_d = window === null || window === void 0 ? void 0 : window.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 ? void 0 : _f.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!(credentialResponse === null || credentialResponse === void 0 ? void 0 : credentialResponse.credential)) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                const { credential, select_by } = credentialResponse;\r\n                onSuccessRef.current({\r\n                    credential,\r\n                    clientId: extractClientId(credentialResponse),\r\n                    select_by,\r\n                });\r\n            },\r\n            hosted_domain,\r\n            cancel_on_tap_outside,\r\n            prompt_parent_id,\r\n            state_cookie_domain,\r\n            use_fedcm_for_prompt,\r\n            auto_select,\r\n        });\r\n        (_j = (_h = (_g = window === null || window === void 0 ? void 0 : window.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 ? void 0 : _j.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a, _b, _c;\r\n            (_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.cancel();\r\n        };\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        cancel_on_tap_outside,\r\n        prompt_parent_id,\r\n        state_cookie_domain,\r\n        hosted_domain,\r\n        use_fedcm_for_prompt,\r\n        disabled,\r\n        auto_select,\r\n    ]);\r\n}\n\n/**\r\n * Checks if the user granted all the specified scope or scopes\r\n * @returns True if all the scopes are granted\r\n */\r\nfunction hasGrantedAllScopesGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    var _a, _b, _c;\r\n    if (!(window === null || window === void 0 ? void 0 : window.google))\r\n        return false;\r\n    return (((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAllScopes(tokenResponse, firstScope, ...restScopes)) || false);\r\n}\n\n/**\r\n * Checks if the user granted any of the specified scope or scopes.\r\n * @returns True if any of the scopes are granted\r\n */\r\nfunction hasGrantedAnyScopeGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    var _a, _b, _c;\r\n    if (!(window === null || window === void 0 ? void 0 : window.google))\r\n        return false;\r\n    return (((_c = (_b = (_a = window === null || window === void 0 ? void 0 : window.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.oauth2) === null || _c === void 0 ? void 0 : _c.hasGrantedAnyScope(tokenResponse, firstScope, ...restScopes)) || false);\r\n}\n\nexport { GoogleLogin, GoogleOAuthProvider, googleLogout, hasGrantedAllScopesGoogle, hasGrantedAnyScopeGoogle, useGoogleLogin, useGoogleOAuth, useGoogleOneTapLogin };\n","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { loadCaptchaEnginge, LoadCanvasTemplate, validateCaptcha } from 'react-simple-captcha';\r\nimport { toast } from 'react-toastify';\r\nimport CustomTextField from '../../components/CustomTextField/CustomTextField';\r\nimport { fetchUsers, loginApi } from '../../apiConfig';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginSuccess } from \"../../redux/features/userSlice\";\r\nimport { setTasks } from '../../redux/features/taskSlice';\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport { jwtDecode } from 'jwt-decode';\r\nconst clientId=process.env.REACT_APP_CLIENT_ID\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nconst validationSchema = Yup.object({\r\n  identifier: Yup.string()\r\n    .required('Username or Email is required')\r\n    .test('is-valid-identifier', 'Enter a valid email or username', value => {\r\n      const isValidEmail = Yup.string().email().isValidSync(value);\r\n      const isValidUsername = Yup.string().min(3).max(20).isValidSync(value);\r\n      return isValidEmail || isValidUsername;\r\n    }),\r\n  password: Yup.string()\r\n    .required('Password is required'),\r\n  captcha: Yup.string()\r\n    .required('Captcha is required')\r\n});\r\n\r\nexport default function LoginFormGoogle() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      identifier: '',\r\n      password: '',\r\n      captcha: ''\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async(values) => {\r\n      if (!validateCaptcha(values.captcha)) {\r\n        toast.error('Captcha not Matched');\r\n        return;\r\n      }\r\n      console.log(values);\r\n      try {\r\n        const allUsersInDb = await fetchUsers();\r\n        // console.log(\"allUsersInDb\",allUsersInDb);\r\n        const foundUserData = allUsersInDb.find(\r\n          (user) =>\r\n            (user.email === values.identifier || user.username === values.identifier) &&\r\n            user.password === values.password\r\n        );\r\n        if (foundUserData) {\r\n          // console.log(foundUserData,\"foundUserData\")\r\n          toast.success('Login successful');\r\n          navigate(\"/dashboard\");\r\n          sessionStorage.setItem(\"token\",\"token\")\r\n          dispatch(loginSuccess(foundUserData))\r\n          dispatch(setTasks(foundUserData?.tasks))\r\n\r\n        } else {\r\n          const existingUser = allUsersInDb.find((user) => user.email === values.identifier || user.username === values.identifier);\r\n          if (existingUser) {\r\n            toast.error('Invalid password');\r\n            } else {\r\n            toast.error('User not found');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        toast.error('An error occurred while trying to log in');\r\n        console.error('Login error:', error);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    try {\r\n        const token = response.credential;\r\n        const googleUser = jwtDecode(token); \r\n        console.log(\"response==\",response,googleUser);\r\n      const email = googleUser.email;\r\n\r\n      // Fetch users from your database\r\n      const allUsersInDb = await fetchUsers();\r\n      const foundUserData = allUsersInDb.find((user) => user.email === email);\r\n\r\n      if (foundUserData) {\r\n        toast.success('Login successful');\r\n        navigate(\"/dashboard\");\r\n        sessionStorage.setItem(\"token\", token);\r\n        dispatch(loginSuccess(foundUserData));\r\n        dispatch(setTasks(foundUserData?.tasks));\r\n      } else {\r\n        toast.error('User not found');\r\n      }\r\n    } catch (error) {\r\n      toast.error('An error occurred while trying to log in with Google');\r\n      console.error('Google login error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCaptchaEnginge(6);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 3, mb: 2 }}>\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log-in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <CustomTextField\r\n                  name=\"identifier\"\r\n                  label=\"Username or Email\"\r\n                  formik={formik}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CustomTextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  formik={formik}\r\n                  type=\"password\"\r\n                  showPassword={showPassword}\r\n                  handleClickShowPassword={handleClickShowPassword}\r\n                  handleMouseDownPassword={handleMouseDownPassword}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LoadCanvasTemplate reloadText=\"Reload Captcha\" reloadColor=\"red\" />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CustomTextField\r\n                  name=\"captcha\"\r\n                  label=\"Enter Captcha Value\"\r\n                  formik={formik}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Login\r\n            </Button>\r\n            <GoogleOAuthProvider clientId={clientId}>\r\n              <GoogleLogin\r\n                onSuccess={handleGoogleLoginSuccess}\r\n                onError={() => {\r\n                  toast.error('Google Login Failed');\r\n                }}\r\n                useOneTap\r\n                // buttonText=\"Login with Google\"\r\n                // render={renderProps => (\r\n                //   <Button\r\n                //     fullWidth\r\n                //     variant=\"contained\"\r\n                //     // variant=\"outlined\"\r\n                //     onClick={renderProps.onClick}\r\n                //     disabled={renderProps.disabled}\r\n                //     sx={{ mt: 3, mb: 2 }}\r\n                //   >\r\n                //     Login with Google\r\n                //   </Button>\r\n                // )}\r\n              />\r\n            </GoogleOAuthProvider>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link to=\"/register\">\r\n                  Don't have an account? Sign Up\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","// CustomTextField.jsx\r\nimport React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nconst CustomTextField = ({\r\n  name,\r\n  label,\r\n  formik,\r\n  type = 'text',\r\n  showPassword = false,\r\n  handleClickShowPassword,\r\n  handleMouseDownPassword,\r\n}) => {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      id={name}\r\n      name={name}\r\n      label={label}\r\n      type={type === 'password' && showPassword ? 'text' : type}\r\n      {...formik.getFieldProps(name)}\r\n      error={formik.touched[name] && Boolean(formik.errors[name])}\r\n      helperText={formik.touched[name] && formik.errors[name]}\r\n      InputProps={{\r\n        ...(type === 'password' && {\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTextField;\r\n"],"names":["API_BASE_URL","handleResponse","async","json","response","ok","Error","message","fetchUsers","fetch","error","console","GoogleOAuthContext","createContext","GoogleOAuthProvider","_ref","clientId","nonce","onScriptLoadSuccess","onScriptLoadError","children","scriptLoadedSuccessfully","options","arguments","length","undefined","setScriptLoadedSuccessfully","useState","onScriptLoadSuccessRef","useRef","current","onScriptLoadErrorRef","useEffect","scriptTag","document","createElement","src","defer","onload","_a","call","onerror","body","appendChild","removeChild","useLoadGsiScript","contextValue","useMemo","React","Provider","value","useGoogleOAuth","context","useContext","extractClientId","credentialResponse","client_id","containerHeightMap","large","medium","small","GoogleLogin","_ref2","onSuccess","onError","useOneTap","promptMomentNotification","type","theme","size","text","shape","logo_alignment","width","locale","click_listener","containerProps","props","btnContainerRef","onSuccessRef","onErrorRef","promptMomentNotificationRef","_b","_c","_d","_e","_f","_g","_h","_j","window","google","accounts","id","initialize","callback","credential","select_by","renderButton","prompt","cancel","ref","style","height","InvalidTokenError","base64UrlDecode","str","output","replace","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","prototype","name","process","REACT_APP_CLIENT_ID","defaultTheme","createTheme","validationSchema","Yup","identifier","required","test","isValidEmail","email","isValidSync","isValidUsername","min","max","password","captcha","LoginFormGoogle","dispatch","useDispatch","navigate","useNavigate","showPassword","setShowPassword","formik","useFormik","initialValues","onSubmit","validateCaptcha","values","log","allUsersInDb","foundUserData","find","user","username","toast","success","sessionStorage","setItem","loginSuccess","setTasks","tasks","loadCaptchaEnginge","_jsx","ThemeProvider","_jsxs","Container","component","maxWidth","sx","mt","mb","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Typography","variant","handleSubmit","Grid","container","spacing","item","xs","CustomTextField","label","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","LoadCanvasTemplate","reloadText","reloadColor","Button","fullWidth","token","googleUser","pos","header","part","split","decoded","e","JSON","parse","jwtDecode","justifyContent","Link","to","TextField","getFieldProps","touched","Boolean","errors","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility"],"sourceRoot":""}
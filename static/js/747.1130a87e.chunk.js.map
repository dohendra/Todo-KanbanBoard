{"version":3,"file":"static/js/747.1130a87e.chunk.js","mappings":"wNAgBA,QAZA,SAAeA,GACb,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,EAAAC,SACjEP,EAAMO,UAGb,E,cCAe,SAASC,EAAOC,GAAoB,IAAnB,MAAEC,EAAK,MAAEC,GAAOF,EAC9C,OACER,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAL,UACEN,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEV,UAC9BW,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJC,GAAI,CACFC,EAAG,EACHC,QAAS,OACTC,cAAe,SACfC,OAAQ,QACRjB,SAAA,EAEFN,EAAAA,EAAAA,KAACwB,EAAK,CAAAlB,SAAEG,KACRT,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,UAAU,IAAIC,QAAQ,KAAIG,SACnCI,UAYb,C,4CCrBA,MAAMe,GAAeC,EAAAA,EAAAA,KAGN,SAASC,IAAa,IAADC,EAAAC,EAAAC,EAClC,MAAMC,EAAwD,QAAvCH,GAAGI,EAAAA,EAAAA,IAAYC,EAAAA,WAAwB,IAAAL,EAAAA,EAAI,EAC5DM,EAA4D,QAAzCL,GAAGG,EAAAA,EAAAA,IAAYG,EAAAA,WAA0B,IAAAN,EAAAA,EAAI,EAChEO,EAA8C,QAAlCN,GAAGE,EAAAA,EAAAA,IAAYK,EAAAA,UAAmB,IAAAP,EAAAA,EAAI,EAUxD,OACE9B,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAACC,MAAOd,EAAanB,UACjCW,EAAAA,EAAAA,MAACuB,EAAAA,EAAG,CAACrB,GAAI,CAAEE,QAAS,QAASf,SAAA,EAC3BN,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,KACPzC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAO,KACRzB,EAAAA,EAAAA,MAACuB,EAAAA,EAAG,CACFtC,UAAU,OACViB,GAAI,CACFwB,gBAAkBJ,GACO,UAAvBA,EAAMK,QAAQC,KACVN,EAAMK,QAAQE,KAAK,KACnBP,EAAMK,QAAQE,KAAK,KACzBC,SAAU,EACVxB,OAAQ,QACRyB,SAAU,QACV1C,SAAA,EAEFN,EAAAA,EAAAA,KAACiD,EAAAA,EAAO,KACRjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,CAACC,SAAS,KAAKhC,GAAI,CAAEiC,GAAI,EAAGC,GAAI,GAAI/C,UAC5CW,EAAAA,EAAAA,MAACL,EAAAA,GAAI,CAAC0C,WAAS,EAACC,QAAS,EAAEjD,SAAA,EACzBN,EAAAA,EAAAA,KAACO,EAAO,CAACE,MAAM,qBAAqBC,MAAOqB,KAC3C/B,EAAAA,EAAAA,KAACO,EAAO,CAACE,MAAM,uBAAuBC,MAAOwB,KAC7ClC,EAAAA,EAAAA,KAACO,EAAO,CAACE,MAAM,eAAeC,MAAO0B,gBAQnD,C","sources":["components/Title/Title.jsx","components/CardBox/CardBox.jsx","Pages/Dashboard/Dashboard.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Title;","import * as React from 'react';\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\nimport Title from '../Title/Title';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nexport default function CardBox({ title, count }) {\r\n  return (\r\n    <>\r\n      <Grid item xs={12} md={4} lg={4}>\r\n        <Paper\r\n          sx={{\r\n            p: 2,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <Title>{title}</Title>\r\n          <Typography component=\"p\" variant=\"h4\">\r\n            {count}\r\n          </Typography>\r\n          {/* <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\r\n        on 15 March, 2019\r\n      </Typography> */}\r\n\r\n\r\n        </Paper>\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n}","import * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport CardBox from '../../components/CardBox/CardBox';\r\nimport { useSelector } from \"react-redux\";\r\nimport Header from '../../components/Header/Header';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport {\r\n  selectTotalCreatedTasks,\r\n  selectTotalCompletedTasks,\r\n  selectPendingTasks,\r\n} from '../../redux/features/taskSlice';\r\nconst defaultTheme = createTheme();\r\n\r\n\r\nexport default function Dashboard() {\r\n  const totalCreatedTasks = useSelector(selectTotalCreatedTasks) ?? 0;\r\n  const totalCompletedTasks = useSelector(selectTotalCompletedTasks) ?? 0;\r\n  const pendingTasks = useSelector(selectPendingTasks) ?? 0;\r\n\r\n\r\n  // const userData = useSelector((state) => state?.user?.user);\r\n  // console.log(\"totalCreatedTasks\",totalCreatedTasks);\r\n  // console.log(\"totalCompletedTasks\",totalCompletedTasks);\r\n  // console.log(\"pendingTasks\",pendingTasks);\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <Header />\r\n        <Sidebar />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={4}>\r\n              <CardBox title=\"Total Created Task\" count={totalCreatedTasks} />\r\n              <CardBox title=\"Total Completed Task\" count={totalCompletedTasks} />\r\n              <CardBox title=\"Pending Task\" count={pendingTasks} />\r\n              {/* <CardBox title=\"Pending Task\" count=\"3\" /> */}\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}"],"names":["props","_jsx","Typography","component","variant","color","gutterBottom","children","CardBox","_ref","title","count","_Fragment","Grid","item","xs","md","lg","_jsxs","Paper","sx","p","display","flexDirection","height","Title","defaultTheme","createTheme","Dashboard","_useSelector","_useSelector2","_useSelector3","totalCreatedTasks","useSelector","selectTotalCreatedTasks","totalCompletedTasks","selectTotalCompletedTasks","pendingTasks","selectPendingTasks","ThemeProvider","theme","Box","Header","Sidebar","backgroundColor","palette","mode","grey","flexGrow","overflow","Toolbar","Container","maxWidth","mt","mb","container","spacing"],"sourceRoot":""}